/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt { tapping-term-ms = <300>; };

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            display-name = "Base";
            bindings = <
&kp LS(LC(F16))  &kp N1  &kp N2          &kp N3            &kp N4              &kp N5                                         &kp N6     &kp N7               &kp N8           &kp N9           &kp N0    &kp MINUS
&kp TAB          &kp Q   &kp W           &kp E             &kp R               &kp T                                          &kp Y      &kp U                &kp I            &kp O            &kp P     &kp EQUAL
&kp LEFT_SHIFT   &kp A   &mt LEFT_ALT S  &mt LEFT_SHIFT D  &mt LEFT_CONTROL F  &kp G                                          &kp H      &mt RIGHT_CONTROL J  &mt RSHIFT K     &mt RIGHT_ALT L  &kp SEMI  &bl BL_CYCLE
&kp LEFT_ALT     &kp Z   &kp X           &kp C             &kp V               &kp B           &kp ESC      &kp SINGLE_QUOTE  &kp N      &kp M                &kp COMMA        &kp DOT          &kp FSLH  &bl BL_ON
                                         &kp LS(TAB)       &kp TAB             &lt 1 LEFT_GUI  &kp SPACE    &lt 2 BACKSPACE   &kp SPACE  &kp ENTER            &kp LS(LC(F18))
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "Lower";
            bindings = <
&bt BT_CLR  &bt BT_SEL 0     &bt BT_SEL 1  &bt BT_SEL 2          &bt BT_SEL 3           &bt BT_SEL 4                    &trans  &trans           &trans           &trans           &kp KP_MULTIPLY  &trans
&trans      &kp EXCLAMATION  &kp AT_SIGN   &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE                        &trans  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS         &trans
&trans      &kp HASH         &kp DOLLAR    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE                       &trans  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_SLASH     &trans
&trans      &kp AMPERSAND    &kp CARET     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp TILDE     &trans    &trans  &trans  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp EQUAL        &trans
                                           &bl BL_INC            &bl BL_ON              &trans        &trans    &trans  &trans  &trans           &kp KP_NUMBER_0
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            display-name = "Raise";
            bindings = <
&kp F1  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                    &kp F6             &kp F7             &kp F8             &kp F9             &kp F10            &kp F11
&trans  &trans  &trans  &trans  &trans  &trans                    &kp LA(LS(LC(Y)))  &kp LA(LC(Q))      &kp LA(LC(N8))     &kp LA(LC(O))      &kp LA(LC(E))      &kp F12
&trans  &trans  &trans  &trans  &trans  &trans                    &kp LA(LC(LS(Q)))  &kp LA(LC(H))      &kp LS(LA(LC(K)))  &kp LA(LC(SEMI))   &kp LS(LA(LC(E)))  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp LC(LA(Z))      &kp LA(LS(LC(N)))  &kp LA(LC(S))      &kp LA(LS(LC(R)))  &kp LA(LC(C))      &trans
                        &trans  &trans  &trans  &trans    &trans  &trans             &trans             &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        extra_1 { status = "reserved"; };

        extra_2 { status = "reserved"; };

        extra_3 { status = "reserved"; };
    };
};
